!SESSION 2020-07-11 13:38:56.632 -----------------------------------------------
eclipse.buildId=4.15.0.I20200305-0155
java.version=1.8.0_251
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.java.product -keyring /Users/katherinefleming/.eclipse_keyring
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.java.product -keyring /Users/katherinefleming/.eclipse_keyring

This is a continuation of log file /Users/katherinefleming/Desktop/Java/Twitter/.metadata/.bak_1.log
Created Time: 2020-07-13 10:17:18.037

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:18.037
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:18.038
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:18.064
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:18.064
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:18.064
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:18.094
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:18.095
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:18.095
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:21.016
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:21.017
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:21.017
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:21.038
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:21.039
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:21.039
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:21.062
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:21.063
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:21.063
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:23.132
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:23.133
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:23.133
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:26.767
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:26.768
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:26.768
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:26.797
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:26.798
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:26.798
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:26.826
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:26.826
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:26.826
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:43.999
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:43.999
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:43.999
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:44.018
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:44.020
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:44.020
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:44.053
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;


	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:44.054
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:44.054
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:45.376
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:17:45.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:17:45.377
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:45.398
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:45.399
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:45.399
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:47.910
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:17:47.911
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:17:47.911
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:47.938
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:47.939
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:47.940
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:50.868
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:50.869
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:50.869
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:50.892
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:50.893
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:50.893
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:50.914
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:50.915
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:50.915
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:54.459
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for user
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:17:54.460
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:17:54.460
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:54.481
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for user
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:54.481
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:54.482
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:54.618
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for user
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:54.619
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:54.619
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:59.508
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:17:59.509
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:17:59.509
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:17:59.537
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:17:59.537
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:17:59.538
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:02.040
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:02.040
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:02.041
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:02.091
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:02.091
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:02.091
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:07.576
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:07.576
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:07.576
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:07.601
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:07.601
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:07.602
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:21.144
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:21.145
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:21.145
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:21.175
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:21.176
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:21.176
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:22.672
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id-
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:22.673
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:22.673
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:22.696
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id-
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:22.697
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:22.697
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:23.696
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:23.697
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:23.697
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:23.723
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:23.724
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:23.725
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:26.431
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:26.431
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:26.432
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:26.649
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the col for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:26.650
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:26.650
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:29.237
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the columns from  for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:29.238
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:29.238
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:29.258
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the columns from  for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:29.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:29.259
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:53.581
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//joining the columns from  for a users id to their role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:53.582
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:53.582
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:58.372
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:18:58.372
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:18:58.373
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:18:58.401
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:18:58.403
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:18:58.403
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:00.402
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:00.402
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:00.402
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:00.449
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:00.449
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:00.449
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:03.433
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:03.433
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:03.433
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:03.452
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:03.453
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:03.453
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:06.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:06.965
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:06.965
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:07.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:07.010
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:07.010
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:08.500
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:08.500
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:08.501
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:08.520
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:08.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:08.521
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:11.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:11.023
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:11.023
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:11.042
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining 
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:11.043
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:11.043
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:16.573
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the roleid
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:16.573
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:16.573
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:16.707
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the roleid
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:16.708
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:16.708
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:19.118
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:19.119
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:19.119
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:19.139
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:19.140
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:19.140
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:22.666
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-07-13 10:19:22.667
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-07-13 10:19:22.669
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:426)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:22.690
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:22.690
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:22.690
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:186)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:175)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:160)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:29.987
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:29.988
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:29.988
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:30.003
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:30.004
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:30.004
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:30.025
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:30.026
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:30.026
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:30.045
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:30.045
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:30.045
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:30.060
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:30.061
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:30.061
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:42.552
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:42.552
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:42.552
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:46.019
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:46.019
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:46.020
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:46.035
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:46.035
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:46.035
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:19:46.062
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:19:46.063
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:19:46.063
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:03.126
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:03.126
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:03.127
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:03.145
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:03.146
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:03.146
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:03.168
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:03.168
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:03.169
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:19.088
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:19.089
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:19.090
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:19.104
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:19.105
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:19.105
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:19.121
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:19.122
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:19.122
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:19.141
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:19.142
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:19.142
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:19.156
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:19.156
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:19.156
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:27.976
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:27.977
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:27.977
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:28.022
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:28.022
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:28.022
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:28.049
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:28.049
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:28.050
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:53.891
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:53.892
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:53.893
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:53.912
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:53.913
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:53.913
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1640)
	at java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1632)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:53.954
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:53.955
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:53.955
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:53.983
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:53.984
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:53.984
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:811)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:755)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:20:54.003
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2020-07-13 10:20:54.004
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2020-07-13 10:20:54.004
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1015)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:894)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1188)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1149)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:757)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:678)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:670)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2020-07-13 10:21:09.968
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.tts.TechTalentTwitter.model;

import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class User {
	
//auto generates the userid which is the primary key
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "user_id")
	private Long id;

//creates and stores a valid email string
	@Email(message = "Please provide a valid email")
	@NotEmpty(message = "Please provide an email")
	private String email;

//creates and stores a valid username string
	@NotEmpty(message = "Please provide a username")
	@Length(min = 3, message = "Your username must have at least 3 characters")
	@Length(max = 15, message = "Your username cannot have more than 15 characters")
	@Pattern(regexp = "[^\\s]+", message = "Your username cannot contain spaces")
	private String username;

//creates and stores a valid password string
	@Length(min = 5, message = "Your password must have at least 5 characters")
	@NotEmpty(message = "Please provide a password")
	@JsonProperty(access = Access.WRITE_ONLY)
	private String password;

//creates and stores a firstname, lastname, timestamp, 
	@NotEmpty(message = "Please provide your first name")
	private String firstName;

	@NotEmpty(message = "Please provide your last name")
	private String lastName;
	
	@CreationTimestamp
	private Date createdAt;

//initializes active integer so we know if the user is logged in or not?
	private int active;

//creating a user-role by joining a users id to the role id columns
	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "role_id"))
	private Set<Role> roles;

	@ManyToMany(cascade = CascadeType.ALL)
	@JoinTable(name = "user_follower", joinColumns = @JoinColumn(name = "user_id"), inverseJoinColumns = @JoinColumn(name = "follower_id"))
	private List<User> followers;

	@ManyToMany(mappedBy = "followers")
	private List<User> following;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getActive() {
		return active;
	}

	public void setActive(int active) {
		this.active = active;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}
	
	
	

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException: startPos = 1908 and length is -961.
This breaks the rule that lengths are not allowed to be negative. Affected Node:
class org.eclipse.jdt.core.dom.MemberValuePair: access=Access.WRITE_ONLY
	at lombok.eclipse.agent.PatchDiagnostics.setSourceRangeCheck(PatchDiagnostics.java:36)
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2362)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2411)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1003)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5363)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5313)
	at org.eclipse.jdt.core.dom.ASTConverter.setModifiers(ASTConverter.java:5417)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3394)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3116)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1243)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:832)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:271)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:263)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:196)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:165)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:132)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
